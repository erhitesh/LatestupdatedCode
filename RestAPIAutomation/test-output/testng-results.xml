<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="8" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Weather API Suite" duration-ms="6100" started-at="2019-08-29T19:28:51Z" finished-at="2019-08-29T19:28:57Z">
    <groups>
    </groups>
    <test name="WeatherTC" duration-ms="6100" started-at="2019-08-29T19:28:51Z" finished-at="2019-08-29T19:28:57Z">
      <class name="com.restAssuredTestCases.WeatherTC">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="setUp" is-config="true" duration-ms="1241" started-at="2019-08-29T19:28:51Z" finished-at="2019-08-29T19:28:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://restapi.demoqa.com/utilities/weather/city]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getCityInfo()[pri:0, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="getCityInfo" is-config="true" duration-ms="4540" started-at="2019-08-29T19:28:52Z" finished-at="2019-08-29T19:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCityInfo -->
        <test-method status="PASS" signature="checkResponseBody()[pri:10, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkResponseBody" duration-ms="136" started-at="2019-08-29T19:28:56Z" finished-at="2019-08-29T19:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:20, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkStatusCode" duration-ms="17" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="SKIP" signature="checkResponseTime()[pri:30, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkResponseTime" duration-ms="16" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.restAssuredTestCases.WeatherTC.checkResponseTime(WeatherTC.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkResponseTime()[pri:30, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkResponseTime" duration-ms="0" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.restAssuredTestCases.WeatherTC.checkResponseTime(WeatherTC.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusLine()[pri:40, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkStatusLine" duration-ms="0" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkContentType()[pri:50, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkContentType" duration-ms="7" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:60, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkContentEncoding" duration-ms="8" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkServerTytpe()[pri:70, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="checkServerTytpe" duration-ms="5" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerTytpe -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.restAssuredTestCases.WeatherTC@3ffcd140]" name="tearDown" is-config="true" duration-ms="2" started-at="2019-08-29T19:28:57Z" finished-at="2019-08-29T19:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.restAssuredTestCases.WeatherTC -->
    </test> <!-- WeatherTC -->
  </suite> <!-- Weather API Suite -->
</testng-results>
